name: CI/CD for MarSUKAT

on:
  push:
    branches:
      - main    # Trigger on push to the main branch
  pull_request:
    branches:
      - main    # Trigger on pull requests targeting the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js (for frontend and backend)
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Set the Node version to match your project

      - name: Cache Node.js dependencies (frontend)
        uses: actions/cache@v3  # Updated to v3
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-

      - name: Install dependencies for frontend
        run: |
          cd frontend
          npm install --legacy-peer-deps

      - name: Build React app (frontend)
        run: |
          cd frontend
          npm run build

      - name: Deploy frontend to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_NAME: ${{ secrets.VERCEL_PROJECT_NAME_FRONTEND }}  # Use a specific frontend project name
          VERCEL_TEAM_ID: ${{ secrets.VERCEL_TEAM_ID }}
        run: |
          cd frontend
          npx vercel --token $VERCEL_TOKEN --team $VERCEL_TEAM_ID --prod --confirm

      - name: Cache Node.js dependencies (backend)
        uses: actions/cache@v3  # Updated to v3
        with:
          path: backend/node_modules
          key: ${{ runner.os }}-backend-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-backend-

      - name: Install dependencies for backend
        run: |
          cd backend
          npm install

      - name: Deploy backend to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_NAME: ${{ secrets.VERCEL_PROJECT_NAME_BACKEND }}  # Use a specific backend project name
          VERCEL_TEAM_ID: ${{ secrets.VERCEL_TEAM_ID }}
        run: |
          cd backend
          npx vercel --token $VERCEL_TOKEN --team $VERCEL_TEAM_ID --prod --confirm
